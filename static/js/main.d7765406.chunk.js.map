{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","handleChange","event","target","value","name","setState","resetState","newMovie","handleSubmit","preventDefault","props","addMovie","onSubmit","this","htmlFor","type","id","onChange","required","Component","App","moviesFromServer","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7765406.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Inputs = HTMLInputElement | HTMLTextAreaElement;\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\ntype State = Movie;\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleChange = (event: React.ChangeEvent<Inputs>) => {\n    const { value, name } = event.target;\n\n    this.setState({ [name]: value } as Pick<State, keyof State>);\n  };\n\n  resetState = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  newMovie = () => {\n    const newMovie = { ...this.state };\n\n    this.resetState();\n\n    return newMovie;\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.props.addMovie(this.newMovie());\n  };\n\n  render() {\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n        <label htmlFor=\"movie__title\" className=\"form__label\">\n          Title\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"title\"\n            id=\"movie__title\"\n            value={this.state.title}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n\n        <label htmlFor=\"movie__description\" className=\"form__label\">\n          Description\n          <textarea\n            className=\"form__input\"\n            name=\"description\"\n            id=\"movie__description\"\n            value={this.state.description}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n\n        <label htmlFor=\"movie__imgUrl\" className=\"form__label\">\n          image URL\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"imgUrl\"\n            id=\"movie__imgUrl\"\n            value={this.state.imgUrl}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n\n        <label htmlFor=\"movie__imdbUrl\" className=\"form__label\">\n          imdb URL\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"imdbUrl\"\n            id=\"movie__imdbUrl\"\n            value={this.state.imdbUrl}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label htmlFor=\"movie__imdbId\" className=\"form__label\">\n          imdb ID\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"imdbId\"\n            id=\"movie__imdbId\"\n            value={this.state.imdbId}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <button type=\"submit\" className=\"form__button\">\n          Add Movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => (\n      { movies: [...state.movies, movie] }\n    ));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}